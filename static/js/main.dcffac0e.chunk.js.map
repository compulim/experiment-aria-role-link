{"version":3,"sources":["hook/useUniqueId.js","util/uniqueId.js","ActiveDescendantList.js","ActiveDescendant.js","LinkNarration.js","App.js","reportWebVitals.js","index.js"],"names":["useUniqueId","idRef","useRef","length","random","toString","substr","uniqueId","current","LIST_ITEMS","lang","href","ActiveDescendantList","boxRole","itemRole","listRole","useState","Object","keys","activeId","setActiveId","setRelativeActive","useCallback","delta","index","indexOf","Math","max","min","setNextActive","setPrevActive","handleKeyPress","event","key","preventDefault","itemIdPrefix","labelId","className","onKeyDown","role","tabIndex","id","entries","map","value","classNames","ActiveDescendant","LinkNarration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcffac0e.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nimport uniqueId from '../util/uniqueId';\n\nexport default function useUniqueId() {\n  const idRef = useRef(uniqueId());\n\n  return [idRef.current];\n}\n","import random from 'math-random';\n\nexport default function uniqueId(prefix = '', length = 5) {\n  return random().toString(36).substr(2, length);\n}\n","import { useCallback, useState } from 'react';\nimport classNames from 'classnames';\n\nimport './ActiveDescendantList.css';\nimport useUniqueId from './hook/useUniqueId';\n\nconst LIST_ITEMS = {\n  'id-0': 'Hello, World!',\n  'id-1': 'Aloha!',\n  'id-2': <span lang=\"ja-JP\">こんにちは！</span>,\n  'id-3': <span lang=\"yue\">您好！</span>,\n  'id-4': (\n    <span>\n      This article is based on{' '}\n      <a href=\"https://en.wikipedia.org/wiki/Alice%27s_Adventures_in_Wonderland\">a Wikipedia article</a>. Follow the\n      link to read more.\n    </span>\n  )\n};\n\nexport default function ActiveDescendantList({ boxRole, itemRole, listRole }) {\n  const [activeId, setActiveId] = useState(Object.keys(LIST_ITEMS)[0]);\n\n  const setRelativeActive = useCallback(\n    delta => {\n      setActiveId(activeId => {\n        const keys = Object.keys(LIST_ITEMS);\n\n        const index = keys.indexOf(activeId);\n\n        if (~index) {\n          return keys[Math.max(0, Math.min(keys.length - 1, index + delta))];\n        }\n\n        return activeId;\n      });\n    },\n    [setActiveId]\n  );\n\n  const setNextActive = useCallback(() => setRelativeActive(1), [setRelativeActive]);\n  const setPrevActive = useCallback(() => setRelativeActive(-1), [setRelativeActive]);\n\n  const handleKeyPress = useCallback(\n    event => {\n      if (event.key === 'ArrowDown') {\n        event.preventDefault();\n        setNextActive();\n      } else if (event.key === 'ArrowUp') {\n        event.preventDefault();\n        setPrevActive();\n      }\n    },\n    [setNextActive, setPrevActive]\n  );\n\n  const itemIdPrefix = useUniqueId('active-descendant__item-') + '-';\n  const labelId = useUniqueId('active-descendant__label-');\n\n  return (\n    <div\n      aria-activedescendant={itemIdPrefix + activeId}\n      aria-labelledby={labelId}\n      className=\"active-descendant-list\"\n      onKeyDown={handleKeyPress}\n      role={boxRole}\n      tabIndex=\"0\"\n    >\n      <div id={labelId}>Press up and down arrow keys to navigate.</div>\n      <ul role={listRole}>\n        {Object.entries(LIST_ITEMS).map(([key, value]) => (\n          <li\n            className={classNames('active-descendant-list__item', {\n              'active-descendant-list__item--active': key === activeId\n            })}\n            id={itemIdPrefix + key}\n            key={key}\n            role={itemRole}\n          >\n            {value}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import './ActiveDescendant.css';\nimport ActiveDescendantList from './ActiveDescendantList';\n\nexport default function ActiveDescendant() {\n  return (\n    <section className=\"active-descendant\">\n      <header>\n        <h1>Active descendant</h1>\n      </header>\n      <article>\n        <h2>How to test</h2>\n        <ol>\n          <li>Focus on the list below, it should show a solid border;</li>\n          <li>Turn off scan mode;</li>\n          <li>Press up/down arrow keys to select different active descendant;</li>\n        </ol>\n        <p>\n          EXPECT: It should narrate the content, including links with accessible name. For example, it should say, \"this\n          article is based on, link, a Wikipedia article.\"\n        </p>\n        <h2>Sample</h2>\n        <h3>\n          Web Chat today: <code>role=\"group\"</code>\n        </h3>\n        <ActiveDescendantList boxRole=\"group\" />\n        <h3>\n          <code>role=\"grid\"</code> and <code>role=\"gridcell\"</code>\n        </h3>\n        <ActiveDescendantList boxRole=\"grid\" itemRole=\"gridcell\" listRole=\"group\" />\n      </article>\n    </section>\n  );\n}\n","import './LinkNarration.css';\n\nexport default function LinkNarration() {\n  return (\n    <section className=\"link-narration\">\n      <header>\n        <h1>Link role narration</h1>\n      </header>\n      <article>\n        <h2>Background</h2>\n        <p>Screen reader should narrate the role of the hyperlink, as \"link\". It should give a pause to emphasis on the role.</p>\n        <h2>How to test</h2>\n        <p>\n          Use a screen reader to read the content of the following <code>&lt;ul&gt;</code>/<code>&lt;li&gt;</code>. It\n          should narrate the link \"a Wikipedia article, link\" (or something similar). It should NOT narrate \"a Wikipedia\n          article, message\".\n        </p>\n        <p>\n          Windows Narrator with CAPS + up/down arrow: \"Bullet, this article is based on, link, a Wikipedia article.\"\n        </p>\n        <p>VoiceOver (macOS) with up/down arrow: \"Bullet, this article is based on, link, a Wikipedia article.\"</p>\n        <p>VoiceOver (iPadOS) with two-finger swipe: \"This article based on a Wikpiedia article, link.\"</p>\n        <h2>Try these out</h2>\n        <cite>\n          IDEAL: Bullet &lt;pause&gt; this article is based on &lt;pause&gt; link &lt;pause&gt; a Wikipedia article.\n        </cite>\n        <p className=\"link-narration__try-out\">Bullet, this article is based on, link, a Wikipedia article.</p>\n        <p className=\"link-narration__try-out\">\n          <small>bullet</small> this article is based on <small>link</small> a wikipedia article.\n        </p>\n        <p className=\"link-narration__try-out\">\n          <ins>bullet</ins> this article is based on <ins>link</ins> a wikipedia article.\n        </p>\n        <p className=\"link-narration__try-out\">\n          <br />\n          bullet\n          <br /> this article is based on <br />\n          link\n          <br /> a wikipedia article.\n        </p>\n        <p className=\"link-narration__try-out\">\n          <div>bullet</div> this article is based on <div>link</div> a wikipedia article.\n        </p>\n        <p className=\"link-narration__try-out\">\n          <em>bullet</em> this article is based on <em>link</em> a wikipedia article.\n        </p>\n        <h2>Sample</h2>\n        <ul aria-roledescription=\"transcript\">\n          <li>\n            <div aria-roledescription=\"activity\">\n              <div aria-roledescription=\"message\">\n                <p>\n                  This article based on{' '}\n                  <a href=\"https://en.wikipedia.org/wiki/Alice%27s_Adventures_in_Wonderland\">a Wikipedia article</a>.\n                </p>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </article>\n    </section>\n  );\n}\n","import './App.css';\n\nimport ActiveDescendant from './ActiveDescendant';\nimport LinkNarration from './LinkNarration';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ActiveDescendant />\n      <LinkNarration />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}